<% if current_game && current_user && ((current_user.id == current_game.white_user_id) || (current_user.id == current_game.black_user_id)) %>
<script type="text/javascript">
$(document).ready(function () {
  $("[data-piece-id]").children("[href]").children('img').draggable({
    stack: "div",
    containment: ".chessboard",
    create: function(){$(this).data('position',$(this).position())},
    cursorAt:{left:15},
    cursor:'move',
    start: function( event, ui ) {
      $(this).stop(true,true);
    }
  });

  function snapToMiddle(dragger, target){
      var topMove = target.position().top - dragger.data('position').top + (target.outerHeight(true) - dragger.outerHeight(true)) / 2;
      var leftMove= target.position().left - dragger.data('position').left + (target.outerWidth(true) - dragger.outerWidth(true)) / 2;
      dragger.animate({top:topMove,left:leftMove},{duration:600,easing:'easeOutBack'});
  }
  
  $("td").droppable({
      drop: function(event, ui) {
        snapToMiddle(ui.draggable,$(this));
        var old_x_pos = ui.draggable.parent().parent().data('x-position');
        var old_y_pos = ui.draggable.parent().parent().parent().data('y-position');
        var x_pos = $(this).data('x-position');
        var y_pos = $(this).parent().data('y-position');
        var current_piece_id = ui.draggable.parent().parent().data('piece-id');
        var image_name = ui.draggable.attr("alt");
        var color = image_name.split(' ')[0];
        var piece_type = image_name.split(' ')[1];
        if (!((old_x_pos == x_pos)&&(old_y_pos == y_pos))) {  //prevent invalid move from popping up if you don't actually move
          if ((piece_type === "pawn") && ((color === "Black" && y_pos === 0) || (color === "White" && y_pos === 7))) {
            $.ajax({
                url: "<%=current_game.id%>/move",
                type: 'PUT',
                dataType: 'html',
                data: { piece_id: current_piece_id, x: x_pos, y: y_pos },
                  success: function () {
                    // goes to promotion url if pawn moving to last row
                    window.location.replace("/pieces/" + current_piece_id + "/promotion_choice");
                  },
                  error: function () {
                    location.reload(true); //refreshes page from server after failed move
                  }
            });
          }
          else {
            $.ajax({
                url: "<%=current_game.id%>/move",
                type: 'PUT',
                dataType: 'json',
                data: { piece_id: current_piece_id, x: x_pos, y: y_pos},
                  success: function () {
                    location.reload(true); //refreshes page from server after move
                  },
                  error: function () {
                    location.reload(true); //refreshes page from server after failed move
                  }
            });
          }
        }
      }
  });
});
</script>
<% end %>
<!-- games.show page -->
<% if current_game %>
  <br />
  <br />
  <div class="row">
    <div class="col-md-6 col-md-offset-3 text-center">
      <h3><%= current_game.game_name %></h3>
      <br />
        <% if !current_game.game_winner.nil? %>
          <% if current_game.game_winner == current_game.white_user_id %>
            <h4 class="turn-indicator">Checkmate! White player wins!</h4>
          <% else %>
            <h4 class="turn-indicator">Checkmate! Black player wins!</h4>
          <% end %>
        <% elsif current_game.draw? %>
          <% if current_game.user_turn == current_game.white_user_id %>
            <h4 class="turn-indicator">Game is a draw! White player in stalemate!</h4>
          <% else %>
            <h4 class="turn-indicator">Game is a draw! Black player in stalemate!</h4>
          <% end %>
        <% elsif current_game.player_missing? %>
          <% if current_game.white_user_id.nil? %>
            <h4 class="turn-indicator">Waiting for white player to join...</h4>
          <% else %>
            <h4 class="turn-indicator">Waiting for black player to join...</h4>
          <% end %>
        <% elsif current_user && current_game.user_turn == current_user.id %>
          <% if current_game.user_turn == current_game.white_user_id %>
            <h4 class="turn-indicator">It is your turn! (white)</h4>
          <% else %>
            <h4 class="turn-indicator">It is your turn! (black)</h4>
          <% end %>
        <% else  %>
          <% if current_user %>
            <% if current_game.user_turn == current_game.white_user_id %>
              <h4 class="turn-indicator">It is your opponent's turn (white)</h4>
            <% else %>
              <h4 class="turn-indicator">It is your opponent's turn (black)</h4>
            <% end %>
          <% else %>
            <% if current_game.user_turn == current_game.white_user_id %>
              <h4 class="turn-indicator">White player's turn</h4>
            <% else %>
              <h4 class="turn-indicator">Black player's turn</h4>
            <% end %>
          <% end %>
        <% end %>
      <br />
      <% if current_game.check? && current_game.game_winner.nil?%>
        <% if current_game.user_turn == current_game.white_user_id %>
          <h4 class ="check-message">White player is in check!</h4>
        <% else %>
          <h4 class ="check-message">Black player is in check!</h4>
        <% end %>
      <% end %>
    </div>
  </div>
  <div class="col-xs-12 col-sm-3 text-center blackside">
    <h4>Black Player</h4> <!-- start to the Left so they will be on TOP with Black in mobile configuration. -->
    <% if !current_game.black_user.nil? %>
      <%= link_to "#{current_game.black_user.email}", user_path(current_game.black_user.id) %>
    <% else %>
      <p>Waiting for player</p>
    <% end %>
    <% if user_signed_in? && current_user == current_game.black_user %>
      <% if current_game.draw == false && current_game.game_winner.nil? %>
        <% if current_game.draw_request.nil? %>
          <%= button_to 'Offer draw', request_draw_game_path(current_game), :class => 'btn btn-warning btn-sm controls', :confirm => 'Are you sure you offer a draw?', :method => :put %>
        <% elsif current_game.draw_request == current_game.white_user_id %>
          <%= button_to 'Accept draw', accept_draw_game_path(current_game), :class => 'btn btn-success btn-sm controls', :confirm => 'Are you sure you accept a draw?', :method => :put %>
          <%= button_to 'Reject draw', reject_draw_game_path(current_game), :class => 'btn btn-danger btn-sm controls', :confirm => 'Are you sure you want to reject the draw?', :method => :put %>
        <% else %>
          <%= link_to 'Draw pending...', '#', :class => 'btn btn-default btn-sm controls' %>
        <% end %>
        <%= button_to 'Forfeit!', forfeit_game_path(current_game), :class => 'btn btn-danger btn-sm controls', :confirm => 'Are you sure you want to concede the game?', :method => :put %>
      <% end %>
    <% end %>
    <p>Captured Pieces:</p>
    <% current_game.pieces.where(color: true, captured: true).order(:updated_at).each do |capped_piece| %>
      <%= image_tag capped_piece.image_name, size: "25x25" %>
    <% end %>
    <br /><br />
  </div>
  <div class="col-xs-12 col-sm-6">
    <table class="chessboard">
      <% if current_user && current_user.id == current_game.black_user_id %>
        <% (0..7).each do |row| %>
            <tr data-y-position="<%= row %>" >
              <% (0..7).to_a.reverse.each do |column| %>
                <%= place_piece_td(row, column).html_safe %>
              <% end %>
            </tr>
          <% end %>
      <% else %>
        <% (0..7).to_a.reverse.each do |row| %>
            <tr data-y-position="<%= row %>" >
              <% (0..7).each do |column| %>
                <%= place_piece_td(row, column).html_safe %>
              <% end %>
            </tr>
          <% end %>
      <% end %>
    </table>
  </div>
  <div class="col-xs-12 col-sm-3 text-center whiteside">
    <h4>White Player</h4> <!-- start to the Right so they will be on the BOTTOM with White in mobile configuration. -->
    <% if !current_game.white_user.nil? %>
      <%= link_to "#{current_game.white_user.email}", user_path(current_game.white_user.id) %>
    <% else %>
      <p>Waiting for player</p>
    <% end %>
    <% if user_signed_in? && current_user == current_game.white_user %>
      <% if current_game.draw == false && current_game.game_winner.nil? %>
        <% if current_game.draw_request.nil? %>
          <%= button_to 'Offer draw', request_draw_game_path(current_game), :class => 'btn btn-warning btn-sm controls', :confirm => 'Are you sure you offer a draw?', :method => :put %>
        <% elsif current_game.draw_request == current_game.black_user_id %>
          <%= button_to 'Accept draw', accept_draw_game_path(current_game), :class => 'btn btn-success btn-sm controls', :confirm => 'Are you sure you want to accept a draw?', :method => :put %>
          <%= button_to 'Reject draw', reject_draw_game_path(current_game), :class => 'btn btn-danger btn-sm controls', :confirm => 'Are you sure you want to reject the draw?', :method => :put %>
        <% else %>
          <%= link_to 'Draw pending...', '#', :class => 'btn btn-default btn-sm controls' %>
        <% end %>
        <%= button_to 'Forfeit!', forfeit_game_path(current_game), :class => 'btn btn-danger btn-sm controls', :confirm => 'Are you sure you want to concede the game?', :method => :put %>
      <% end %>
    <% end %>
    <p>Captured Pieces:</p>
    <% current_game.pieces.where(color: false, captured: true).order(:updated_at).each do |capped_piece| %>
      <%= image_tag capped_piece.image_name, size: "25x25" %>
    <% end %>
    <br /><br />
  </div>
<% end %>
<%= subscribe_to "/games/" + @game.id.to_s %>
